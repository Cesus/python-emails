import smtplib
import ssl
import csv
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText


def send_email(name, location, email):
    # initialize strings
    subject = "Merry Christmas"
    body = f"""Hi {name}, 

I hope you are enjoying your vacation in {location}.
Merry Christmas and a Happy New Year!"""
    receiver_email = f"{email}"

    # Create a multipart message and set headers
    message = MIMEMultipart()
    message["From"] = sender_email
    message["To"] = receiver_email
    message["Subject"] = subject

    # Add body to email
    message.attach(MIMEText(body, "plain"))

    filename = "christmas-img.jpg"  # image or gif

    # Open file in binary mode
    with open(filename, "rb") as attachment:
        # Add file as application/octet-stream
        # Email client can usually download this automatically as attachment
        part = MIMEBase("application", "octet-stream")
        part.set_payload(attachment.read())

    # Encode file in ASCII characters to send by email
    encoders.encode_base64(part)

    # Add header as key/value pair to attachment part
    part.add_header(
        "Content-Disposition",
        f"attachment; filename= {filename}",
    )

    # Add attachment to message and convert message to string
    message.attach(part)
    text = message.as_string()

    # Log in to server using secure context and send email
    context = ssl.create_default_context()
    with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
        server.login(sender_email, password)
        server.sendmail(sender_email, receiver_email, text)


# Grabs user's input, security could be improved
sender_email = input("Please enter your email: ")
password = input("Please enter the password for your email: ")
print("working...")
with open("christmas-list.csv") as file:
    reader = csv.reader(file)
    next(reader)  # skip header
    for name, email, location in reader:
        send_email(name, location, email)
print("Email(s) successful")
